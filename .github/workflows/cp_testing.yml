name: Compatibility testing
run-name: Windows + browser + NodeJS + DB

on:
  workflow_dispatch:

jobs:
  test-windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        node: [14, 18, 20]
        database: [postgresql, mysql, mongodb]
        browser: [chromium, msedge]

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          path: mainrepo

      - name: Checkout Wiki.js source
        working-directory: mainrepo
        run: |
          curl -L https://github.com/Requarks/wiki/releases/latest/download/wiki-js.tar.gz -o wiki-js.tar.gz
          mkdir wikijs
          tar -xzf wiki-js.tar.gz -C ./wikijs
          cd wikijs
          copy config.sample.yml config.yml

      - name: Setup Node.js ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}

      # --- Setup Database ---
      - name: Setup Database
        shell: pwsh
        run: |
          if ("${{ matrix.database }}" -eq "mysql") {
            choco install mysql -y
            Start-Service MySQL80 -ErrorAction SilentlyContinue
            Start-Service MySQL -ErrorAction SilentlyContinue
            Start-Sleep -Seconds 20

            mysql -uroot -e "DROP DATABASE IF EXISTS wiki;"
            mysql -uroot -e "CREATE DATABASE wiki;"
            mysql -uroot -e "CREATE USER 'wikijs'@'localhost' IDENTIFIED BY 'wikijsrocks';"
            mysql -uroot -e "GRANT ALL PRIVILEGES ON wiki.* TO 'wikijs'@'localhost';"
            mysql -uroot -e "FLUSH PRIVILEGES;"

            echo "DB_TYPE=mysql" | Out-File -FilePath $env:GITHUB_ENV -Append
            echo "DB_HOST=127.0.0.1" | Out-File -FilePath $env:GITHUB_ENV -Append
            echo "DB_PORT=3306" | Out-File -FilePath $env:GITHUB_ENV -Append
            echo "DB_USER=wikijs" | Out-File -FilePath $env:GITHUB_ENV -Append
            echo "DB_PASS=wikijsrocks" | Out-File -FilePath $env:GITHUB_ENV -Append
            echo "DB_NAME=wiki" | Out-File -FilePath $env:GITHUB_ENV -Append
          }
          elseif ("${{ matrix.database }}" -eq "postgresql") {
            choco install postgresql -y
          
            # Đường dẫn bin của PostgreSQL
            $pgBin = "C:\Program Files\PostgreSQL\17\bin"
            $env:PATH += ";$pgBin"
          
            # Chờ dịch vụ khởi động
            Start-Sleep -Seconds 20
          
            # Tạo database và user
            & "$pgBin\createdb.exe" -U postgres wiki
            & "$pgBin\psql.exe" -U postgres -d postgres -c "DO $$ BEGIN IF NOT EXISTS (SELECT FROM pg_roles WHERE rolname = 'wikijs') THEN CREATE ROLE wikijs WITH LOGIN PASSWORD 'wikijsrocks'; END IF; END $$;"
            & "$pgBin\psql.exe" -U postgres -d postgres -c "GRANT ALL PRIVILEGES ON DATABASE wiki TO wikijs;"
          
            # Xuất env cho Wiki.js
            echo "DB_TYPE=postgres" | Out-File -FilePath $env:GITHUB_ENV -Append
            echo "DB_HOST=127.0.0.1" | Out-File -FilePath $env:GITHUB_ENV -Append
            echo "DB_PORT=5432" | Out-File -FilePath $env:GITHUB_ENV -Append
            echo "DB_USER=wikijs" | Out-File -FilePath $env:GITHUB_ENV -Append
            echo "DB_PASS=wikijsrocks" | Out-File -FilePath $env:GITHUB_ENV -Append
            echo "DB_NAME=wiki" | Out-File -FilePath $env:GITHUB_ENV -Append
          }
          elseif ("${{ matrix.database }}" -eq "mongodb") {
            choco install mongodb -y
            Start-Service MongoDB
            Start-Sleep -Seconds 20

            echo "DB_TYPE=mongodb" | Out-File -FilePath $env:GITHUB_ENV -Append
            echo "DB_HOST=127.0.0.1" | Out-File -FilePath $env:GITHUB_ENV -Append
            echo "DB_PORT=27017" | Out-File -FilePath $env:GITHUB_ENV -Append
            echo "DB_NAME=wiki" | Out-File -FilePath $env:GITHUB_ENV -Append
          }

      - name: Install dependencies
        working-directory: mainrepo/wikijs
        run: |
          npm install --no-audit --no-fund --legacy-peer-deps

      - name: Build Wiki.js
        working-directory: mainrepo/wikijs
        run: |
          echo "Building Wiki.js on Node ${{ matrix.node }} with DB ${{ matrix.database }} and Browser ${{ matrix.browser }}"
          npm rebuild sqlite3

      - name: Start Wiki.js server
        working-directory: mainrepo/wikijs
        shell: pwsh
        run: |
          echo "Starting Wiki.js server..."
          Start-Process -NoNewWindow -FilePath "node" -ArgumentList "server" `
            -RedirectStandardOutput "server.log" -RedirectStandardError "server.log"
          Start-Sleep -Seconds 25
          Get-Content server.log -Tail 50



      - name: Install Playwright
        working-directory: mainrepo
        run: |
          npm install -D @playwright/test
          npx playwright install --with-deps

      - name: Run Playwright Tests (Chrome/Edge)
        working-directory: mainrepo
        run: |
          npx playwright test --config=playwright.config.ts --project=${{ matrix.browser }}
