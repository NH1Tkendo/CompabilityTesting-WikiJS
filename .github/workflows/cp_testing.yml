name: Compatibility testing
run-name: macOS + Safari + NodeJS + DB

on:
  workflow_dispatch:

jobs:
  test:
    name: Test (${{ matrix.os }} - Node ${{ matrix.node }} - DB ${{ matrix.db }})
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest]  # Safari chỉ chạy được trên macOS
        node: [14, 18, 20]
        db: [mysql, postgres, mongodb]

    services:
      mysql:
        image: mysql:8
        ports: [3306:3306]
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: wiki
        options: >-
          --health-cmd "mysqladmin ping -h localhost -proot"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          if: matrix.db == 'mysql'

      postgres:
        image: postgres:15
        ports: [5432:5432]
        env:
          POSTGRES_USER: wiki
          POSTGRES_PASSWORD: wiki
          POSTGRES_DB: wiki
        options: >-
          --health-cmd "pg_isready -U wiki"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          if: matrix.db == 'postgres'

      mongodb:
        image: mongo:6
        ports: [27017:27017]
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          if: matrix.db == 'mongodb'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}

      - name: Install dependencies
        run: npm install

      - name: Setup Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Wiki.js (background)
        run: |
          NODE_ENV=development npm start &
          sleep 20

      - name: Run Playwright Safari test
        run: |
          echo "import { test, expect } from '@playwright/test';
          test('homepage should load in Safari', async ({ browser }) => {
            const safari = await browser.newContext({ browserName: 'webkit' });
            const page = await safari.newPage();
            await page.goto('http://localhost:3000');
            await expect(page).toHaveTitle(/Wiki/i);
            await safari.close();
          });" > basic.spec.ts

          npx playwright test basic.spec.ts --project=webkit
