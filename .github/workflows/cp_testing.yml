name: Compatibility Testing

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  compatibility-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: [16.x, 18.x, 20.x]
        browser: [chrome, firefox]
        database: [postgresql, mysql, mongodb, sqlserver]

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: wikijs
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U test -d wikijs"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: test
          MYSQL_DATABASE: wikijs
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      mongo:
        image: mongo:6
        ports:
          - 27017:27017
        options: >-
          --health-cmd="mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      mssql:
        image: mcr.microsoft.com/mssql/server:2022-latest
        env:
          SA_PASSWORD: "YourStrong!Passw0rd"
          ACCEPT_EULA: "Y"
        ports:
          - 1433:1433
        options: >-
          --health-cmd="/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P YourStrong!Passw0rd -Q 'SELECT 1'"
          --health-interval=15s
          --health-timeout=5s
          --health-retries=10

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Dependencies
        run: npm install

      - name: Build Project
        run: npm run build

      - name: Run Tests with DB
        env:
          NODE_ENV: test
          DB_TYPE: ${{ matrix.database }}
          DB_HOST: localhost
          DB_USER: test
          DB_PASSWORD: test
          DB_NAME: wikijs
          BROWSER: ${{ matrix.browser }}
        run: |
          echo "Running tests on Node.js ${{ matrix.node-version }}, DB ${{ matrix.database }}, Browser ${{ matrix.browser }}"
          npm test
